import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java'
    id "org.sonarqube" version "3.4.0.2513"
}
group 'com.javier'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'


    repositories {
        mavenCentral()
    }

    test {
        finalizedBy jacocoTestReport
        testLogging {
            events TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED
        }
    }
    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
        }
    }

}
project(':ShareKernel') {
    dependencies {}
}

project(':CheckInDomain') {
    dependencies {
        implementation project(':ShareKernel')
    }
}

project(':CheckIn.Application') {
    dependencies {
        implementation project(':ShareKernel'), project(':CheckInDomain')
        testImplementation project(':CheckInDomain').sourceSets.test.output
    }
}

project('CheckIn.Infraestructure') {
    dependencies {
        implementation project(':ShareKernel'), project(':CheckInDomain'), project(':CheckIn.Application')
    }
}

project('CheckInApi') {
    dependencies {
        implementation project(':ShareKernel'),
                project(':CheckInDomain'),
                project(':CheckIn.Infraestructure'),
                project(':CheckIn.Application')
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "javiervpr_airline"
        property "sonar.organization", "javiervpr"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean